generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://atikoweb:house535723@localhost:5432/kz2"
}

model User {
  id          String   @id @default(uuid()) @db.VarChar(50)
  username    String   @db.VarChar(50)
  email       String?  @unique @db.VarChar(50)
  password    String   @db.VarChar(255)
  phone       String   @unique @db.VarChar(20)
  active      Boolean  @default(false)
  Review      Review[]
  CreateOrder Order[]
}

model Product {
  id         String      @id @default(uuid()) @db.VarChar(50)
  productId  String      @db.VarChar(50)
  name       String      @db.VarChar(255)
  price      Int
  rating     Float       @default(0)
  desc       String      @db.VarChar()
  opt_price  Int
  active     Boolean     @default(false)
  barcode    String?     @db.VarChar(50)
  art        String      @db.VarChar(50)
  category   Category?   @relation(fields: [categoryId], references: [id])
  sizeId     String?     @db.VarChar(50)
  sizeName   String?     @db.VarChar(50)
  categoryId String?     @db.VarChar(50)
  brand      Brand?      @relation(fields: [brandId], references: [id])
  brandId    String?     @db.VarChar(50)
  Review     Review[]
  OrderItem  OrderItem[]
}

model Category {
  id            String     @id @db.VarChar(50)
  name          String
  product       Product[]
  parentId      String?
  parent        Category?  @relation("ChildCategories", fields: [parentId], references: [id])
  children      Category[] @relation("ChildCategories")
  isInteresting Boolean    @default(false)
}

model Review {
  id        String   @id @default(uuid()) @db.VarChar(50)
  rating    Float
  active    Boolean  @default(false)
  content   String   @db.VarChar()
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.VarChar(50)
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.VarChar(50)
}

model Brand {
  id      String    @id @db.VarChar(50)
  name    String    @unique
  Product Product[]
}

model Config {
  id                   String  @id @default(uuid()) @db.VarChar(50)
  main_color           String  @unique @default("#000") @db.VarChar(20)
  column_count         Int     @unique
  shop_name            String? @default("AtikoWeb.Store") @db.VarChar()
  isInteresting        Boolean @default(false)
  phone                String  @unique @default("7086001010") @db.VarChar(22)
  email                String  @default("sales@atikoweb.ru") @db.VarChar()
  desc                 String  @default("") @db.VarChar()
  refund_policy        String  @default("") @db.VarChar()
  isInfoMessageVisible Boolean @default(false)
  infoMessage          String? @default("Без сообщения") @db.VarChar(255)
}

model CreateOrder {
  id              String      @id @default(uuid()) @db.VarChar(50)
  orderNumber     String      @unique @db.VarChar(50)
  createdAt       DateTime    @default(now())
  status          String      @default("pending")
  totalAmount     Int
  userId          String      @db.VarChar(50)
  user            User        @relation(fields: [userId], references: [id])
  items           OrderItem[]
  shippingAddress String      @db.VarChar(256)
  paymentMethod   String
}

model OrderItem {
  id        String  @id @default(uuid()) @db.VarChar(50)
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.VarChar(50)
  quantity  Int
  price     Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String  @db.VarChar(50)
}
